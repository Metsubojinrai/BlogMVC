@model Blog.Models.Post
@{
    ViewData["Title"] = Model.Title;
    List<Category> categories = ViewBag.categories;
    Category category = Category.Find(categories,
        Model.PostCategories.FirstOrDefault()?.CategoryID ?? 0);
    Layout = "/Views/ViewPost/_PostLayout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item">
            <a asp-controller="ViewPost"
               asp-action="Index" asp-route-slug="">Blog</a>
        </li>
        @if (category != null)
        {
            var lis = category.ListParents();
            foreach (var li in lis)
            {
                <li class="breadcrumb-item">
                    <a asp-controller="ViewPost"
                       asp-action="Index" asp-route-slug="@li.Slug">@li.Title</a>
                </li>
            }
        }
    </ol>
</nav>

<div class="detailpost">
    <h1>@Model.Title</h1>
    <div class="sapo">@Model.Description</div>
    @Html.Raw(Model.Content)
</div>

@section Sidebar {
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

        <!-- Sidebar - Brand -->
        <a class="sidebar-brand d-flex align-items-center justify-content-center"
           asp-action="Index" asp-controller="Home" asp-area="">
            <div class="sidebar-brand-icon rotate-n-15">
                <i class="fas fa-laugh-wink"></i>
            </div>
            <div class="sidebar-brand-text mx-3">BlogMVC</div>
        </a>

        <!-- Nav Item - Pages Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUserManage" aria-expanded="true">
                <i class="fas fa-fw fa-cog"></i>
                <span>Danh mục</span>
            </a>
            <div id="collapsePosts" class="collapse show" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                        @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
                            new CategorySidebar.CategorySidebarData()
                            {
                                level = 0,
                                categories = ViewBag.categories,
                                slugCategory = ViewBag.slugCategory
                            })
                </div>
            </div>
        </li>

        <!-- Divider -->
        <hr class="sidebar-divider d-none d-md-block">

        <!-- Sidebar Toggler (Sidebar) -->
        <div class="text-center d-none d-md-inline">
            <button class="rounded-circle border-0" id="sidebarToggle"></button>
        </div>
    </ul>
    <!-- End of Sidebar -->
}
